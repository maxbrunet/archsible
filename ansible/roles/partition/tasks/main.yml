---
# tasks file for partition
- name: Remove all partitions from disk
  parted:
    device: '{{ partition_device }}'
    number: '{{ partition_device | regex_search("^.*?(\d+)$") }}'
    stage: absent
  when: partition_reset
  with_items:
    '{{ ansible_devices[( partition_device | basename )].partitions }}'

- name: Create partitions
  parted:
    device: '{{ item.device }}'
    number: '{{ item.number }}'
    flags: '{{ item.flags | default([]) }}'
    part_start: '{{ item.part_start }}'
    part_end: '{{ item.part_end }}'
    label: '{{ partition_label }}'
    state: present
  with_items: '{{ partition_list }}'
  loop_control:
    label: '{{ _partition_dev }}'

- name: Handle vfat filesystems
  include_tasks: vfat.yml
  when: item.fstype == 'vfat'
  with_items: '{{ partition_list }}'

- name: Create filesystems
  filesystem:
    fstype: '{{ item.fstype }}'
    dev: '{{ _partition_dev }}'
  when: item.fstype != 'vfat'
  with_items: '{{ partition_list }}'
  loop_control:
    label: '{{ _partition_dev }}'

- name: Mounting partions to mountpoint directory
  mount:
    src: "{{ _partition_dev }}"
    path: "{{ partition_mountpoint }}{{ item.mountpoint }}"
    fstype: '{{ item.fstype }}'
    opts: '{{ item.opts }}'
    state: mounted
  with_items:
    '{{ partition_list | sort(attribute="mountpoint") }}'
  loop_control:
    label: '{{ _partition_dev }}'

- name: Ensure etc directory exits
  file:
    path: '{{ partition_mountpoint }}/etc'
    state: directory

- name: Generate the filesystem table
  command: '/usr/bin/genfstab -p -t UUID {{ partition_mountpoint }}'
  register: _partition_genfstab
  changed_when: false
  check_mode: false

- name: Write the filesystem table
  copy:
    content: |
      {{ _partition_genfstab.stdout }}
    dest: '{{ partition_mountpoint }}/etc/fstab'
